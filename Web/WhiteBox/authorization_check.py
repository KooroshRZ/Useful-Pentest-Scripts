import requests
import re
from time import sleep
import json

proxies = {
    'http': 'http://127.0.0.1:8080',
    'https': 'https://127.0.0.1:8080'
}

def check_eggjs_routes():

    host = "https://hostname"
    lines = open("./router.js", 'r').read()
    routes = re.findall(r"'(/.*)'|router\.(.*)\(", lines)
    
    response0 = None
    response1= None
    response2 = None

    for index in range(0, len(routes), 2):
        method = routes[index][1]
        route = routes[index+1][0]
        url = f"{host}{route}"

        if method == 'get':
            response0 = requests.get(url, proxies=proxies, verify=False)
        elif method == 'post':
            response0 = requests.post(url, json={}, proxies=proxies, verify=False)
        elif method == 'put':
            response0 = requests.put(url, json={}, proxies=proxies, verify=False)
        elif method == 'resources':
            response0 = requests.get(url, proxies=proxies, verify=False)
            response1 = requests.post(url, json={}, proxies=proxies, verify=False)
            response2 = requests.put(url, json={}, proxies=proxies, verify=False)

        if not ('No authorization' in response0.text or 'Authorization header is missing' in response0.text):
            print(f"[+] Found Unauthorized API : {method} {route} returned {response0.status_code}")
        elif not('No authorization' in response1.text or 'Authorization header is missing' in response1.text):
            print(f"[+] Found Unauthorized API : {method} {route} returned {response1.status_code}")
        elif not('No authorization' in response2.text or 'Authorization header is missing' in response2.text):
            print(f"[+] Found Unauthorized API : {method} {route} returned {response2.status_code}")

        
    sleep(0.2)


check_eggjs_routes()